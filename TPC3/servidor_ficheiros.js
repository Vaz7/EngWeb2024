var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function getMovieName(movieID){
    axios.get('http://localhost:3000/filmes/' + movieID)
    .then( function(resp){
        dados = resp.data
        return dados["title"]
    })
    .catch(function(erro){
        res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
        res.write("<pre>" + erro + "</pre>")
        res.end()
    })
}


function genAtor(ator){
    pagHTML=`
    <!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8"/>
        <title>${Object.keys(ator)[0]}</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1>${Object.keys(ator)[0]}</h1>
            </header>
            
            <div class="w3-container">
            <table class="w3-table w3-striped">
                        <tr>
                            <th>Filme</th>
                        </tr>`;
    
                const filmes = ator[Object.keys(ator)[0]];
                filmes.forEach((filme) => {
                    pagHTML += `
                        <tr>
                            <td><a href='/filmes/${filme}'>${filme}</a></td>
                        </tr>`;
    });
    
    pagHTML += `
                    </table>
                </div>
                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb24 [<a href='/filmes'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>`;
    
    return pagHTML;
}


function genAtores(atores){
    pagHTML=`
    <!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8"/>
        <title>Lista de Atores</title>
        
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1><a href="/">Lista de Atores</a></h1>
            </header>
            
            <div class="w3-container">
              <table class="w3-table w3-striped">
                <tr>
                  <th>Nome</th>
                </tr>`
    atores.forEach((ato) => {
        const ator = Object.keys(ato)[0]; // Get the first key which represents the genre name

        pagHTML += `
        <tr>
            <td><a href='/atores/${ato.id}'>${ator}</a></td>
        </tr>`
    });

    pagHTML+=`
    </table>
            </div>
            
            <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb24 [<a href='/'>Voltar à lista</a>]</h5>
              
            </footer>
            
            </div>
    </body>
</html>`

return pagHTML
}

function genGenero(genero) {
    let pagHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>${Object.keys(genero)[0]}</title>
            <link rel="stylesheet" href="/w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>${Object.keys(genero)[0]}</h1>
                </header>
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>Filme</th>
                        </tr>`;
    
    const filmes = genero[Object.keys(genero)[0]];
    filmes.forEach((filme) => {
        pagHTML += `
                        <tr>
                            <td><a href='/filmes/${filme}'>${filme}</a></td>
                        </tr>`;
    });
    
    pagHTML += `
                    </table>
                </div>
                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb24 [<a href='/filmes'>Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>`;
    
    return pagHTML;
}



function genGeneros(generos){
    pagHTML=`
    <!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8"/>
        <title>Lista de Generos</title>
        
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1><a href="/">Lista de Generos</a></h1>
            </header>
            
            <div class="w3-container">
              <table class="w3-table w3-striped">
                <tr>
                  <th>Nome</th>
                </tr>`
    generos.forEach((gen) => {
        const genero = Object.keys(gen)[0]; // Get the first key which represents the genre name
        console.log(genero) // Assuming 'filmes' is the property containing movies
        pagHTML += `
        <tr>
            <td><a href='/generos/${gen.id}'>${genero}</a></td>
        </tr>`
    });

    pagHTML+=`
    </table>
            </div>
            
            <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb24 [<a href='/'>Voltar à lista</a>]</h5>
              
            </footer>
            
            </div>
    </body>
</html>`

return pagHTML
}

function genFilme(filme){
    pagHTML=`
    <!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8"/>
        <title>${filme.title}</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1>${filme.title}</h1>
            </header>
            
            <div class="w3-container">
            <pre>
            <h3>Ano: ${filme.year}</h3>`

            if(filme.cast.length!=0){
                pagHTML+=`<table class="w3-table w3-striped">
                <tr>
                  <th>Cast</th>
                </tr>`
                filme.cast.forEach(ocorr => {
                    pagHTML += `
                    <tr>
                        <td><a href="http://localhost:3000/atores/${ocorr}">${ocorr}</td>
                    </tr>`
                });
                pagHTML+=`</table>`
            }

            if(filme.genres.length!=0){
                pagHTML+=`<table class="w3-table w3-striped">
                <tr>
                  <th>Genres</th>
                </tr>`
                filme.genres.forEach(ocorr => {
                    pagHTML += `
                    <tr>
                        <td>${ocorr}</td>
                    </tr>`
                });
                pagHTML+=`</table>`
            }
            
            
                pagHTML +=`</pre>
            </div>

            <footer class="w3-container w3-blue">
              <h5>Generated by EngWeb24 [<a href='/filmes'>Voltar à lista</a>]</h5>
            </footer>
            
            </div>
    </body>
</html>`

return pagHTML
}


function genFilmes(filmes){
    pagHTML=`
    <!DOCTYPE html>

<html>
    <head>
        <meta charset="utf-8"/>
        <title>Lista de Filmes</title>
        
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
              <h1><a href="/">Lista de Filmes</a></h1>
            </header>
            
            <div class="w3-container">
              <table class="w3-table w3-striped">
                <tr>
                  <th>Nome</th>
                </tr>`

    filmes.forEach(ocorr => {
        pagHTML += `
        <tr>
            <td><a href='/filmes/${ocorr.id}'>${ocorr.title}</a></td>
        </tr>`
    });

    pagHTML+=`
    </table>
            </div>
            
            <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb24 [<a href='/'>Voltar à lista</a>]</h5>
              
            </footer>
            
            </div>
    </body>
</html>`

return pagHTML
}





http.createServer(function (req, res){
    var regex = /^\/filmes\/[a-z0-9]{4}$/
    var regex2 = /^\/generos\/[a-z0-9]{4}$/
    var regex3 = /^\/atores\/[a-z0-9]{4}$/
    var q = url.parse(req.url,true)

    if(q.pathname=='/'){
        fs.readFile('principal.html',function(erro,dados){
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(dados)
            res.end()
        })
    }
    else if(q.pathname=='/w3.css'){
        fs.readFile('w3.css',function(erro,dados){
            res.writeHead(200, {'Content-Type': 'text/css; charset=utf-8'})
            res.write(dados)
            res.end()
        })
    }

    else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
        .then( function(resp){
            dados = resp.data
            pagHTML = genFilmes(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else if(regex.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
        .then( function(resp){
            dados = resp.data
            pagHTML = genFilme(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else if(q.pathname == '/generos'){
        axios.get('http://localhost:3000/generos')
        .then( function(resp){
            dados = resp.data
            pagHTML = genGeneros(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else if(regex2.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
        .then( function(resp){
            dados = resp.data
            pagHTML = genGenero(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else if(q.pathname == '/atores'){
        axios.get('http://localhost:3000/atores')
        .then( function(resp){
            dados = resp.data
            pagHTML = genAtores(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else if(regex3.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
        .then( function(resp){
            dados = resp.data
            pagHTML = genAtor(dados)
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
            res.write(pagHTML)
            res.end()
        })
        .catch(function(erro){
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<pre>" + erro + "</pre>")
            res.end()
        })
    }
    else{
            res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
            res.write("<p>Erro: Pedido não suportado.</p>")
            res.write('<pre>' + q.pathname + '</pre>')
            res.end()
    }
    console.log(q.pathname)
    
}).listen(7777)
